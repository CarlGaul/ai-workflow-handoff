#!/usr/bin/env python3
"""
GitHub HTML Wrapper for Grok Access
===================================

This script creates HTML versions of GitHub files so Grok's tools can read them.
The issue is that raw GitHub files are served as plain text, but Grok's web tools
expect HTML content.

Usage:
    python3 github_html_wrapper.py [filename]
"""

import requests
import sys
import os
from pathlib import Path

def fetch_github_file(filename):
    """Fetch a file from GitHub and return its content"""
    base_url = "https://raw.githubusercontent.com/CarlGaul/ai-workflow-handoff/main/outputs/"
    url = base_url + filename
    
    try:
        response = requests.get(url)
        response.raise_for_status()
        return response.text
    except requests.RequestException as e:
        print(f"‚ùå Error fetching {filename}: {e}")
        return None

def create_html_wrapper(content, filename):
    """Create an HTML wrapper for the file content"""
    html_template = f"""<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GitHub File: {filename}</title>
    <style>
        body {{
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
            line-height: 1.6;
            margin: 40px;
            background-color: #f6f8fa;
        }}
        .container {{
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }}
        .header {{
            border-bottom: 2px solid #e1e4e8;
            padding-bottom: 20px;
            margin-bottom: 30px;
        }}
        .filename {{
            font-size: 24px;
            font-weight: bold;
            color: #24292e;
            margin-bottom: 10px;
        }}
        .source {{
            color: #586069;
            font-size: 14px;
        }}
        .content {{
            background-color: #f6f8fa;
            border: 1px solid #e1e4e8;
            border-radius: 6px;
            padding: 20px;
            overflow-x: auto;
            white-space: pre-wrap;
            font-size: 13px;
            line-height: 1.45;
        }}
        .footer {{
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #e1e4e8;
            color: #586069;
            font-size: 12px;
            text-align: center;
        }}
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="filename">{filename}</div>
            <div class="source">Source: GitHub Repository - ai-workflow-handoff</div>
        </div>
        <div class="content">{content}</div>
        <div class="footer">
            Generated by GitHub HTML Wrapper for Grok Access
        </div>
    </div>
</body>
</html>"""
    
    return html_template

def save_html_file(html_content, filename):
    """Save the HTML file locally"""
    output_dir = Path("html_outputs")
    output_dir.mkdir(exist_ok=True)
    
    html_filename = filename.replace('.py', '.html').replace('.md', '.html')
    output_path = output_dir / html_filename
    
    with open(output_path, 'w', encoding='utf-8') as f:
        f.write(html_content)
    
    return output_path

def main():
    """Main function to process GitHub files"""
    if len(sys.argv) < 2:
        print("Usage: python3 github_html_wrapper.py [filename]")
        print("Example: python3 github_html_wrapper.py ollama_client_fix.py")
        return
    
    filename = sys.argv[1]
    print(f"üîÑ Processing {filename}...")
    
    # Fetch content from GitHub
    content = fetch_github_file(filename)
    if content is None:
        return
    
    # Create HTML wrapper
    html_content = create_html_wrapper(content, filename)
    
    # Save HTML file
    output_path = save_html_file(html_content, filename)
    
    print(f"‚úÖ Created HTML file: {output_path}")
    print(f"üìÑ File size: {len(html_content)} characters")
    print(f"üåê You can now share this HTML file with Grok")

if __name__ == "__main__":
    main() 